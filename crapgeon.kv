#: import DungeonStats game_stats.DungeonStats
#: import JerkyStats game_stats.JerkyStats
#: import CoffeeStats game_stats.CoffeeStats
#: import TobaccoStats game_stats.TobaccoStats
#: import WhiskyStats game_stats.WhiskyStats
#: import TalismanStats game_stats.TalismanStats

<DungeonLayout>:
    size_hint: None, None
    height: self.minimum_height
    width: self.minimum_width

<Label>:
    text_size: self.size    # needed to make halign work  
    halign: 'left'
    valign: 'center'
    font_size: '20sp'
    #padding: '20dp', '10dp', '20dp', '10dp'

<Button>:
    # disabled: True
    halign: 'center'

<MainMenuButton@Button>
    text: "Main Menu"
    on_release: app.root.current = "main_menu"

<MusicButton@Button>
    text: "Music OFF" if app.music_on else "Music ON"
    on_release:
        app.music_on = not app.music_on

<MenuLayout@BoxLayout>
    orientation: "vertical"
    spacing: 10
    padding: '5dp', '0dp','5dp','5dp'

<Tile>:
    background_normal: ''   # sets the background default to white instead of predefined grey
    background_color: 0.4, 0.8, 1, 1
    size_hint: None,None
    width: '55dp'
    height: self.width
    kind: None
    disabled: True

    canvas:
        Color:
            rgba: (1,1,1,0.8) if not self.disabled else (1,1,1,1)

        Rectangle:  # draws the floor
            pos: self.pos
            size: self.size
            source: "./backgrounds/" + self.kind + 'background.png' if self.kind else None

<ProgressBar>:
    padding: '40dp'

<ScrollView>:
    effect_cls: 'ScrollEffect'  # avoids bouncing when reaching end of scroll

<MineMadnessGame>:
    on_active_character_id:
        name_label.text = str(root.active_character.name)
        ability_button.text = ability_button.display_text()

    on_level: level_label.text = "Depth: " + str(self.level * 30) + " ft."
    on_shovels: shovels_label.text = 'Shovels: ' + str(root.active_character.stats.shovels)
    on_weapons: weapons_label.text = 'Weapons: ' + str(root.active_character.stats.weapons)
    on_gems: gems_label.text = 'Gems: ' + str(root.active_character.gems) + '/' + str(root.total_gems)

    BoxLayout:
        orientation: 'vertical'
        padding: '5dp'
        size_hint: 1,1

        # HEADER LABELS: CHARACTER NAME AND ABILITY BUTTON
        BoxLayout:
            padding: '5dp'
            orientation: 'horizontal'
            size_hint: 1, 0.05

            Label:
                id: name_label
                size_hint: 0.6, 1
                font_size: '23sp'

            AbilityButton:
                size_hint: 0.4, 1
                id: ability_button
                game: root

        # GUI: CHARACTER STATS AND INVENTORY
        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, 0.2
            padding: '5dp'

            #CHARACTER STATS
            BoxLayout:
                orientation: 'vertical'
                size_hint: 0.5,1
                spacing: '5dp'

                Label:
                    id: level_label
                Label:
                    id: weapons_label
                Label:
                    id: shovels_label
                Label:
                    id: gems_label

            #INVENTORY
            BoxLayout:
                orientation: 'vertical'
                size_hint: 0.5,1
                spacing: '5dp'

                JerkyButton:
                    text: "Jerky"
                    id: jerky_button
                    stats: JerkyStats()
                    game: root
                CoffeeButton:
                    text: "Coffee"
                    id: coffee_button
                    stats: CoffeeStats()
                    game: root
                TobaccoButton:
                    text: "Tobacco"
                    id: tobacco_button
                    stats: TobaccoStats()
                    game: root
                WhiskyButton:
                    text: "Whisky"
                    id: whisky_button
                    stats: WhiskyStats()
                    game: root
                TalismanButton:
                    text: "Talisman"
                    id: talisman_button
                    stats: TalismanStats()
                    game: root

        BoxLayout:
            size_hint: 1, 0.025
            padding: '5dp', '0dp','5dp','5dp'
            ProgressBar:
                max: 20
                value: 0
                id: experience_bar

        ScrollView:
            size_hint: 1, 0.575

            DungeonLayout:
                game: root
                dungeon_level: 1
                stats: DungeonStats(self.dungeon_level)
                rows: self.stats.size()
                cols: self.stats.size()
                blueprint: self.generate_blueprint(self.rows, self.cols)

        BoxLayout:
            orientation: "horizontal"
            size_hint: 1, 0.05
            padding: '0dp', '5dp','0dp','5dp'
            spacing: '5dp'
            MusicButton:
            MainMenuButton:

<HowToPlay>
    MenuLayout:
        Label:
            text: "How To Play"
            font_size: '40sp'
            text_size: self.size    # needed to make halign work
            halign: 'center'
        MainMenuButton:

<GameOver>:
    Label:
        text: "GAME OVER"
        font_size: '80sp'
        text_size: self.size    # needed to make halign work
        halign: 'center'
    MainMenuButton:

<MainMenu>
    MenuLayout:
        Label:
            text: "Mine Madness"
            font_size: '40sp'
            text_size: self.size    # needed to make halign work
            halign: 'center'
        Button:
            text: "Start game"
            on_release:
                app.root.current = "game_screen"
                main_menu_info.text = ""
        Button:
            text: "Continue"
            disabled: True
            on_release:
                main_menu_info.text = ""
        Button:
            text: "How to play"
            on_release:
                app.root.current = "how_to_play"
                main_menu_info.text = ""
        MusicButton:
            on_release:
                main_menu_info.text = ""
        Button:
            text: "Mode: NORMAL" if app.game_mode_normal else "Mode: HARDCORE"
            on_release:
                app.game_mode_normal = not app.game_mode_normal
                main_menu_info.text ="Mode NORMAL: saved game are preserved if characters are killed" \
                if app.game_mode_normal else "Mode HARDCORE: saved games are erased if characters are killed"
        Button:
            text: "Quit"
            on_release:
                app.stop()
        Label:
            id: main_menu_info
